version: '3.8'

services:
  kafka:
    image: bitnami/kafka:3.7.1
    container_name: kafka
    hostname: kafka
    ports:
      - 9092:9092
    volumes:
      - ./dockervol/kafka:/bitnami/kafka
    environment:
      - TZ=Asia/Jakarta
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:19092,PLAINTEXT_HOST://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:19092,PLAINTEXT_HOST://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    container_name: kafka-ui
    ports:
      - 8080:8080
    environment:
      TZ: Asia/Jakarta
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:19092

  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - 3307:3306
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: test_db
      MYSQL_USER: user
      MYSQL_PASSWORD: user_password
    volumes:
      - ./dockervol/mysql:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always

  redis:
    image: redis:7.0
    container_name: redis
    ports:
      - 6379:6379
    volumes:
      - ./dockervol/redis:/data
    command: ["redis-server", "--appendonly", "yes"]
    restart: always
